[] Make all packets compound packets (gonna require some test reworking)
  - still want to allow the user to create non compound packets the same way:
    p = Packet(category, address, payload)
  - want to allow the user to add info to a packet:
    p.Add(address, payload)
  - add unpack method
    p.unpack(codec)
[] Allow multi packets in a single packet string (eg. "P0800:44:33|P9000:12:6543\n")
[] Do acks/nacks properly - should be: "A8000\n" or "N8000\n"
  Note: Acks and Naks only apply as a response to set commands
[] Set up documentation for general behaviour

ROBUS - Robot Bus 
Similar protocols - NASA has ROBUS-2, which is a hardware comms standard for optical transmision

Compound packets:
* Purpose: - co-relate sets of data together
* Example: - pass a timestamp alongside imu data
* Format: 'P0900:85fd|0800:0234:2334:1234\n'
The compound '|' assumes the same category, but adds new data.

Compound packets are a type of packet.
Should all packets be considered compound packets? - Yes

Compound packets are always the same category - there is no usecase requiring multiple categories
Compound packets are applicable to the following categories:
* Pub - Really all pubs should be compound to relate data to a moment in time
* Sub - A little unneccesary - but good for convenience
* Get - Relates all data to a moment in time
* Set - Ensure that a group of actions occur together (or not at all if one of the addresses are not settable)
* Ack - Acknowledge a compound set
* Nak - Call failure on a compound set

Packet methods:

encode(packet) = bstring
decode(bstring) = packet
unpack(packet) = dict(addr: values)






